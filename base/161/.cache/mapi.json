{
    "title": "@161 L3 - Vivo ou Morto - OBI 2005",
    "description": "<!DOCTYPE html>\n<html xmlns=\"http://www.w3.org/1999/xhtml\" lang=\"\" xml:lang=\"\">\n<head>\n  <meta charset=\"utf-8\" />\n  <meta name=\"generator\" content=\"pandoc\" />\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, user-scalable=yes\" />\n  <title>@161 L3 - Vivo ou Morto - OBI 2005</title>\n  <style>\n    code{white-space: pre-wrap;}\n    span.smallcaps{font-variant: small-caps;}\n    span.underline{text-decoration: underline;}\n    div.column{display: inline-block; vertical-align: top; width: 50%;}\n    div.hanging-indent{margin-left: 1.5em; text-indent: -1.5em;}\n    ul.task-list{list-style: none;}\n  </style>\n  <link rel=\"stylesheet\" href=\"/tmp/tmpbbfhx57g.css\" />\n  <!--[if lt IE 9]>\n    <script src=\"//cdnjs.cloudflare.com/ajax/libs/html5shiv/3.7.3/html5shiv-printshiv.min.js\"></script>\n  <![endif]-->\n</head>\n<body>\n<h2 id=\"l3---vivo-ou-morto---obi-2005\"><span class=\"citation\"\ndata-cites=\"161\">@161</span> L3 - Vivo ou Morto - OBI 2005</h2>\n<p><img\nsrc=\"https://raw.githubusercontent.com/qxcodefup/arcade/master/base/161/cover.jpg\" /></p>\n<h2 id=\"motiva\u00e7\u00e3o\">Motiva\u00e7\u00e3o</h2>\n<p>Toda crianc\u0327a certamente ja\u0301 brincou de \u201cvivo ou morto\u201d. A brincadeira\ne\u0301 dirigida por um \u201cchefe\u201d (um adulto), que comanda dois ou mais\nparticipantes (crianc\u0327as). A brincadeira e\u0301 composta de rodadas.</p>\n<p>No in\u0131\u0301cio, os participantes sa\u0303o organizados pelo chefe em fila u\u0301nica.\nA cada rodada o chefe grita \u201cvivo\u201d ou \u201cmorto\u201d e todos os participantes\ntentam seguir sua ordem, levantando-se ao ouvir a palavra \u201cvivo\u201d ou\nabaixando-se ao ouvir a palavra \u201cmorto\u201d. Um participante que na\u0303o segue a\nordem do chefe e\u0301 eliminado, deixando o seu lugar na fila.</p>\n<p>Os participantes remanescentes agrupam-se novamente em fila u\u0301nica,\npreenchendo as posic\u0327o\u0303es dos participantes eliminados, mas mantendo suas\nposic\u0327o\u0303es relativas. O jogo continua ate\u0301 que uma rodada seja composta por\nexatamente um participante. Tal participante e\u0301 dito o vencedor do\njogo.</p>\n<p>Por exemplo, considere que a brincadeira inicie com cinco\nparticipantes, identificados por nu\u0301meros inteiros de 1 a 5, e que o\nchefe organize a fila na ordem 3 \u2192 2 \u2192 1 \u2192 4 \u2192 5. Se na primeira rodada\nforem eliminados os participantes 2 e 4, a fila da segunda rodada sera\u0301\nformada por 3 \u2192 1 \u2192 5; se na segunda rodada for eliminado o participante\n1, a fila da terceira rodada sera\u0301 formada por 3 \u2192 5. Se na terceira\nrodada o participante 3 for eliminado, o vencedor da brincadeira sera\u0301 o\nparticipante 5.</p>\n<h2 id=\"a\u00e7\u00e3o\">A\u00e7\u00e3o</h2>\n<p>Sua tarefa e\u0301 escrever um programa que determine o vencedor de uma\npartida de \u201cvivo ou morto\u201d, a partir da informac\u0327a\u0303o das ordens dadas pelo\nchefe e das ac\u0327o\u0303es executadas pelos participantes em cada rodada.</p>\n<h3 id=\"entrada\">Entrada</h3>\n<ul>\n<li>A entrada e\u0301 constitu\u0131\u0301da de va\u0301rios casos de teste, cada um\nrepresentando uma partida. A primeira linha de um caso de teste conte\u0301m\ndois nu\u0301meros inteiros P e R indicando respectivamente a quantidade\ninicial de participantes (2 \u2264 P \u2264 100) e quantidade de rodadas da\npartida (1 \u2264 R \u2264 100).</li>\n<li>Os participantes sa\u0303o identificados por nu\u0301meros de 1 a P . A segunda\nlinha de um caso de teste descreve a fila organizada pelo chefe,\ncontendo P nu\u0301meros inteiros distintos x1 , x2 , . . . xP , onde x1\nrepresenta o identificador do participante no primeiro lugar na fila, x2\nrepresenta o identificador do participante no segundo lugar na fila, e\nassim por diante (1 \u2264 xi \u2264 P ).</li>\n<li>Cada uma das R linhas seguintes representa uma rodada, contendo um\nnu\u0301mero inteiro inteiro N indicando o nu\u0301mero de participantes da rodada\n(2 \u2264 N \u2264 P ), um nu\u0301mero inteiro inteiro J representando a ordem dada\npelo chefe (0 \u2264 J \u2264 1) e N nu\u0301meros inteiros Ai representando a ac\u0327a\u0303o do\nparticipante colocado na i-e\u0301sima posic\u0327a\u0303o na fila (0 \u2264 Ai \u2264 1).</li>\n<li>Ordens e ac\u0327o\u0303es \u201cvivo\u201d sa\u0303o representadas pelo valor 1, ordens e ac\u0327o\u0303es\n\u201cmorto\u201d pelo valor zero. Cada partida tem exatamente um vencedor,\ndeterminado somente na u\u0301ltima rodada fornecida no caso de teste\ncorrespondente. O final da entrada e\u0301 indicado por P = R = 0.</li>\n<li>A entrada deve ser lida do dispositivo de entrada padra\u0303o\n(normalmente o teclado).</li>\n</ul>\n<h3 id=\"sa\u00edda\">Sa\u00edda</h3>\n<ul>\n<li>Para cada caso de teste seu programa deve produzir tre\u0302s linhas. A\nprimeira identifica o conjunto de teste no formato \u201cTeste n\u201d, onde n e\u0301\nnumerado a partir de 1. A segunda linha deve conter o identificador do\nvencedor. A terceira linha deve ser deixada em branco. A grafia mostrada\nno Exemplo de Sa\u0131\u0301da, abaixo, deve ser seguida rigorosamente.<br />\n</li>\n<li>A sa\u0131\u0301da deve ser escrita no dispositivo de sa\u0131\u0301da padra\u0303o (normalmente\na tela).</li>\n</ul>\n<p>\fOlimp\u0131\u0301ada Brasileira de Informa\u0301tica - OBI2005 - Modalidade\nProgramac\u0327a\u0303o N\u0131\u0301vel 2</p>\n<h2 id=\"restri\u00e7\u00f5es\">Restri\u00e7\u00f5es</h2>\n<pre><code>2 \u2264 P \u2264 100 (P = 0 apenas para indicar o fim da entrada)  \n1 \u2264 R \u2264 100 (R = 0 apenas para indicar o fim da entrada)  \n1 \u2264 xi \u2264 P , para 1 \u2264 i \u2264 P  \n2\u2264N \u2264P  \n0\u2264J \u22641  \n0 \u2264 Ai \u2264 1, para 1 \u2264 i \u2264 N</code></pre>\n<h2 id=\"exemplos\">Exemplos</h2>\n<pre><code>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; 01\n5 4\n3 2 1 4 5\n5 1 1 1 1 1 1\n5 0 0 1 0 1 0\n3 0 0 1 0\n2 1 0 1\n5 4\n3 2 1 4 5\n5 1 1 1 1 1 1\n5 0 0 1 0 1 0\n3 0 0 1 0\n2 1 1 0\n2 2\n2 1\n2 1 1 1\n2 1 1 0\n0 0\n========\nTeste 1\n5\nTeste 2\n3\nTeste 3\n2\n&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</code></pre>\n</body>\n</html>\n",
    "upload": [
        {
            "name": "vpl_evaluate.cases",
            "contents": ">>>>>>>> 01\n5 4\n3 2 1 4 5\n5 1 1 1 1 1 1\n5 0 0 1 0 1 0\n3 0 0 1 0\n2 1 0 1\n5 4\n3 2 1 4 5\n5 1 1 1 1 1 1\n5 0 0 1 0 1 0\n3 0 0 1 0\n2 1 1 0\n2 2\n2 1\n2 1 1 1\n2 1 1 0\n0 0\n========\nTeste 1\n5\nTeste 2\n3\nTeste 3\n2\n<<<<<<<<\n\n>>>>>>>> 02\n10 7\n5 6 1 8 10 4 2 7 9 3\n10 1 1 1 0 1 1 1 1 1 1 1\n9 1 1 1 0 1 1 1 1 1 0\n7 1 0 0 1 1 1 1 1\n5 1 1 0 1 1 1\n4 1 1 1 1 1\n4 0 0 1 0 0\n3 1 1 0 0\n8 8\n6 2 3 4 8 1 5 7\n8 1 1 0 1 1 1 1 1 1\n7 1 1 1 1 1 1 1 1\n7 0 0 0 0 0 0 0 0\n7 1 1 1 1 1 1 1 1\n7 1 1 0 1 1 1 1 1\n6 1 1 1 0 0 1 1\n4 0 0 0 0 0\n4 1 0 0 0 1\n10 10\n3 5 1 7 4 8 2 9 10 6\n10 1 1 1 1 1 1 1 1 1 1 1\n10 0 0 0 0 0 0 0 1 0 0 0\n9 0 0 0 0 0 0 0 0 1 0\n8 1 1 1 1 1 1 0 0 1\n6 1 1 1 1 1 1 1\n6 0 0 0 0 1 0 0\n5 0 0 0 0 0 0\n5 0 1 0 0 0 0\n4 0 0 0 0 0\n4 1 0 1 0 0\n0 0\n========\nTeste 1\n10\nTeste 2\n7\nTeste 3\n1\n<<<<<<<<\n\n>>>>>>>> 03\n3 6\n1 2 3\n3 0 0 0 0\n3 0 0 0 0\n3 0 0 0 0\n3 1 0 1 1\n2 0 0 1\n1 0 0\n3 10\n3 1 2\n3 1 1 1 1\n3 0 0 0 1\n2 0 0 0\n2 0 0 0\n2 0 0 0\n2 0 0 0\n2 0 0 0\n2 1 0 1\n1 0 0\n1 0 0\n5 4\n5 2 3 4 1\n5 0 0 0 0 0 0\n5 1 1 1 1 1 0\n4 1 0 1 1 0\n2 0 1 0\n10 6\n1 8 4 3 5 6 10 2 7 9\n10 0 0 0 0 1 1 0 1 0 0 0\n7 1 1 1 0 1 0 0 1\n4 0 0 1 0 0\n3 1 1 1 1\n3 0 0 1 0\n2 0 1 0\n5 4\n3 5 4 2 1\n5 0 0 0 0 0 0\n5 1 0 1 1 0 1\n3 0 0 0 0\n3 0 0 1 1\n10 7\n10 3 6 8 2 9 1 4 7 5\n10 0 0 0 0 1 0 0 0 0 1 0\n8 0 0 0 0 1 0 0 0 0\n7 0 1 1 1 0 1 0 0\n3 1 0 0 1\n1 0 0\n1 0 0\n1 0 0\n8 3\n5 3 4 2 1 7 6 8\n8 0 0 0 0 0 1 0 0 0\n7 1 0 0 1 1 1 1 1\n5 0 1 1 1 0 1\n9 6\n4 6 7 8 2 9 1 3 5\n9 1 0 1 0 1 1 1 1 1 1\n7 1 1 1 1 1 1 1 1\n7 1 1 1 1 0 1 1 1\n6 0 1 0 1 0 0 0\n4 0 0 1 1 1\n1 1 1\n2 9\n2 1\n2 0 0 0\n2 0 0 0\n2 1 1 1\n2 0 0 0\n2 0 0 0\n2 1 1 1\n2 0 1 0\n1 1 1\n1 1 1\n8 6\n3 5 4 2 1 8 7 6\n8 1 1 1 1 1 1 1 1 1\n8 1 1 1 1 1 1 1 1 1\n8 1 0 1 0 1 1 0 0 1\n4 0 1 0 0 1\n2 0 0 1\n1 0 0\n0 0\n========\nTeste 1\n2\nTeste 2\n1\nTeste 3\n3\nTeste 4\n9\nTeste 5\n5\nTeste 6\n5\nTeste 7\n6\nTeste 8\n8\nTeste 9\n1\nTeste 10\n2\n<<<<<<<<\n",
            "encoding": 0
        }
    ],
    "keep": [],
    "required": []
}
