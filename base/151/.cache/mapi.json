{
    "title": "@151 L1 - Impedido!",
    "description": "<!DOCTYPE html>\n<html xmlns=\"http://www.w3.org/1999/xhtml\" lang=\"\" xml:lang=\"\">\n<head>\n  <meta charset=\"utf-8\" />\n  <meta name=\"generator\" content=\"pandoc\" />\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, user-scalable=yes\" />\n  <title>@151 L1 - Impedido\\!</title>\n  <style>\n    code{white-space: pre-wrap;}\n    span.smallcaps{font-variant: small-caps;}\n    span.underline{text-decoration: underline;}\n    div.column{display: inline-block; vertical-align: top; width: 50%;}\n    div.hanging-indent{margin-left: 1.5em; text-indent: -1.5em;}\n    ul.task-list{list-style: none;}\n  </style>\n  <link rel=\"stylesheet\" href=\"/tmp/tmpu86krfod.css\" />\n  <!--[if lt IE 9]>\n    <script src=\"//cdnjs.cloudflare.com/ajax/libs/html5shiv/3.7.3/html5shiv-printshiv.min.js\"></script>\n  <![endif]-->\n</head>\n<body>\n<h2 id=\"l1---impedido\"><span class=\"citation\"\ndata-cites=\"151\">@151</span> L1 - Impedido!</h2>\n<h3 id=\"obi-2015---fase-2---n\u00edvel-1\">OBI 2015 - Fase 2 - N\u00edvel 1</h3>\n<p><a\nhref=\"https://raw.githubusercontent.com/qxcodefup/arcade/master/base/151/solver.c\"></a></p>\n<h2 id=\"motiva\u00e7\u00e3o\">Motiva\u00e7\u00e3o</h2>\n<p>A regra do impedimento no futebol pode parecer estranha, mas sem ela,\nse a gente pensar bem, o jogo ficaria muito chato! Ela funciona dadas as\nposi\u00e7\u00f5es de tr\u00eas jogadores: L o jogador atacante que lan\u00e7a a bola; R o\njogador atacante que recebe a bola; e D o \u00faltimo jogador defensor. E a\nregra vale somente se o jogador R est\u00e1 no seu campo de ataque; se o\njogador R est\u00e1 no seu campo de defesa ou na linha divis\u00f3ria do meio\ncampo, ele n\u00e3o est\u00e1 em impedimento. Neste problema o campo tem 100\nmetros de comprimento. Dadas as posi\u00e7\u00f5es desses tr\u00eas jogadores, no\nmomento exato do lan\u00e7amento, haver\u00e1 impedimento se e somente se a\nseguinte condi\u00e7\u00e3o for verdadeira: <strong>(R&gt;50) e (L&lt; R) e (R\n&gt; D)</strong>.</p>\n<p>A regra parece estranha, n\u00e3o \u00e9 mesmo? Mas a gente nem precisa\nentender a l\u00f3gica dela. O seu programa deve apenas determinar, dadas as\ntr\u00eas posi\u00e7\u00f5es L,R e D, se h\u00e1 ou n\u00e3o impedimento, implementando\nexatamente a condi\u00e7\u00e3o acima. A figura abaixo mostra um exemplo onde \\bf\nn\u00e3o h\u00e1 impedimento:</p>\n<p><img\nsrc=\"https://raw.githubusercontent.com/qxcodefup/arcade/master/base/151/cover.jpg\" /></p>\n<h3 id=\"entrada\">Entrada</h3>\n<ul>\n<li>A entrada \u00e9 composta 3 linhas, contendo os tr\u00eas inteiros L, R e\nD.</li>\n</ul>\n<h3 id=\"sa\u00edda\">Sa\u00edda</h3>\n<ul>\n<li>Seu programa deve produzir uma \u00fanica linha, contendo um \u00fanico\ncaractere, que deve ser \u201cS\u201d caso haja impedimento, ou \u201cN\u201d caso\ncontr\u00e1rio.</li>\n</ul>\n<h2 id=\"restri\u00e7\u00f5es\">Restri\u00e7\u00f5es</h2>\n<ul>\n<li>0 \u2264 L \u2264 100</li>\n<li>0 \u2264 R \u2264 100</li>\n<li>0 \u2264 D \u2264 100</li>\n</ul>\n<h2 id=\"exemplos\">Exemplos</h2>\n<pre><code>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;\n35\n60\n75\n========\nN\n&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;\n\n&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;\n55\n68\n67\n========\nS\n&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;\n\n&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;\n66\n80\n80\n========\nN\n&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</code></pre>\n</body>\n</html>\n",
    "upload": [
        {
            "name": "vpl_evaluate.cases",
            "contents": ">>>>>>>>\n35\n60\n75\n========\nN\n<<<<<<<<\n\n>>>>>>>>\n55\n68\n67\n========\nS\n<<<<<<<<\n\n>>>>>>>>\n66\n80\n80\n========\nN\n<<<<<<<<\n\n>>>>>>>> 04\n33\n40\n20\n========\nN\n<<<<<<<<\n\n>>>>>>>> 05\n80\n80\n40\n========\nN\n<<<<<<<<\n\n>>>>>>>> 06\n40\n40\n30\n========\nN\n<<<<<<<<\n\n>>>>>>>> 07\n71\n47\n15\n========\nN\n<<<<<<<<\n",
            "encoding": 0
        }
    ],
    "keep": [],
    "required": []
}
