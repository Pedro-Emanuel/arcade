{
    "title": "@141 L2 - N\u00fameros de Fibonacci",
    "description": "<!DOCTYPE html>\n<html xmlns=\"http://www.w3.org/1999/xhtml\" lang=\"\" xml:lang=\"\">\n<head>\n  <meta charset=\"utf-8\" />\n  <meta name=\"generator\" content=\"pandoc\" />\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, user-scalable=yes\" />\n  <title>@141 L2 - N\u00fameros de Fibonacci</title>\n  <style>\n    code{white-space: pre-wrap;}\n    span.smallcaps{font-variant: small-caps;}\n    span.underline{text-decoration: underline;}\n    div.column{display: inline-block; vertical-align: top; width: 50%;}\n    div.hanging-indent{margin-left: 1.5em; text-indent: -1.5em;}\n    ul.task-list{list-style: none;}\n    pre > code.sourceCode { white-space: pre; position: relative; }\n    pre > code.sourceCode > span { display: inline-block; line-height: 1.25; }\n    pre > code.sourceCode > span:empty { height: 1.2em; }\n    .sourceCode { overflow: visible; }\n    code.sourceCode > span { color: inherit; text-decoration: inherit; }\n    div.sourceCode { margin: 1em 0; }\n    pre.sourceCode { margin: 0; }\n    @media screen {\n    div.sourceCode { overflow: auto; }\n    }\n    @media print {\n    pre > code.sourceCode { white-space: pre-wrap; }\n    pre > code.sourceCode > span { text-indent: -5em; padding-left: 5em; }\n    }\n    pre.numberSource code\n      { counter-reset: source-line 0; }\n    pre.numberSource code > span\n      { position: relative; left: -4em; counter-increment: source-line; }\n    pre.numberSource code > span > a:first-child::before\n      { content: counter(source-line);\n        position: relative; left: -1em; text-align: right; vertical-align: baseline;\n        border: none; display: inline-block;\n        -webkit-touch-callout: none; -webkit-user-select: none;\n        -khtml-user-select: none; -moz-user-select: none;\n        -ms-user-select: none; user-select: none;\n        padding: 0 4px; width: 4em;\n        color: #aaaaaa;\n      }\n    pre.numberSource { margin-left: 3em; border-left: 1px solid #aaaaaa;  padding-left: 4px; }\n    div.sourceCode\n      {   }\n    @media screen {\n    pre > code.sourceCode > span > a:first-child::before { text-decoration: underline; }\n    }\n    code span.al { color: #ff0000; font-weight: bold; } /* Alert */\n    code span.an { color: #60a0b0; font-weight: bold; font-style: italic; } /* Annotation */\n    code span.at { color: #7d9029; } /* Attribute */\n    code span.bn { color: #40a070; } /* BaseN */\n    code span.bu { color: #008000; } /* BuiltIn */\n    code span.cf { color: #007020; font-weight: bold; } /* ControlFlow */\n    code span.ch { color: #4070a0; } /* Char */\n    code span.cn { color: #880000; } /* Constant */\n    code span.co { color: #60a0b0; font-style: italic; } /* Comment */\n    code span.cv { color: #60a0b0; font-weight: bold; font-style: italic; } /* CommentVar */\n    code span.do { color: #ba2121; font-style: italic; } /* Documentation */\n    code span.dt { color: #902000; } /* DataType */\n    code span.dv { color: #40a070; } /* DecVal */\n    code span.er { color: #ff0000; font-weight: bold; } /* Error */\n    code span.ex { } /* Extension */\n    code span.fl { color: #40a070; } /* Float */\n    code span.fu { color: #06287e; } /* Function */\n    code span.im { color: #008000; font-weight: bold; } /* Import */\n    code span.in { color: #60a0b0; font-weight: bold; font-style: italic; } /* Information */\n    code span.kw { color: #007020; font-weight: bold; } /* Keyword */\n    code span.op { color: #666666; } /* Operator */\n    code span.ot { color: #007020; } /* Other */\n    code span.pp { color: #bc7a00; } /* Preprocessor */\n    code span.sc { color: #4070a0; } /* SpecialChar */\n    code span.ss { color: #bb6688; } /* SpecialString */\n    code span.st { color: #4070a0; } /* String */\n    code span.va { color: #19177c; } /* Variable */\n    code span.vs { color: #4070a0; } /* VerbatimString */\n    code span.wa { color: #60a0b0; font-weight: bold; font-style: italic; } /* Warning */\n  </style>\n  <link rel=\"stylesheet\" href=\"/tmp/tmp7d_j728z.css\" />\n  <!--[if lt IE 9]>\n    <script src=\"//cdnjs.cloudflare.com/ajax/libs/html5shiv/3.7.3/html5shiv-printshiv.min.js\"></script>\n  <![endif]-->\n</head>\n<body>\n<h2 id=\"l2---n\u00fameros-de-fibonacci\"><span class=\"citation\"\ndata-cites=\"141\">@141</span> L2 - N\u00fameros de Fibonacci</h2>\n<p><img\nsrc=\"https://raw.githubusercontent.com/qxcodefup/arcade/master/base/141/cover.jpg\" /></p>\n<h2 id=\"motiva\u00e7\u00e3o\">Motiva\u00e7\u00e3o</h2>\n<p>Os n\u00fameros de Fibonacci s\u00e3o definidos recursivamente de acordo com a\nexpress\u00e3o abaixo:</p>\n<p><code>se n=1 ou n=2, ent\u00e3o fib(n) = 1</code><br />\n<code>se n &gt;= 3, ent\u00e3o fib(n) = fib(n-1) + fib(n-2).</code></p>\n<pre><code>n         1  2  3  4  5  6   7   8   9\nfib(n)    1  1  2  3  5  8  13  21  34</code></pre>\n<h2 id=\"a\u00e7\u00e3o\">A\u00e7\u00e3o</h2>\n<p>A fun\u00e7\u00e3o fib abaixo retorna o n-\u00e9simo n\u00famero de Fibonacci, mas de\nforma n\u00e3o recursiva. Forne\u00e7a uma fun\u00e7\u00e3o fib que seja recursiva.</p>\n<div class=\"sourceCode\" id=\"cb2\"><pre class=\"sourceCode c\"><code class=\"sourceCode c\"><span id=\"cb2-1\"><a href=\"#cb2-1\" aria-hidden=\"true\" tabindex=\"-1\"></a>    <span class=\"dt\">int</span> fib<span class=\"op\">(</span><span class=\"dt\">int</span> n<span class=\"op\">){</span></span>\n<span id=\"cb2-2\"><a href=\"#cb2-2\" aria-hidden=\"true\" tabindex=\"-1\"></a>        <span class=\"dt\">int</span> f <span class=\"op\">=</span> <span class=\"dv\">1</span><span class=\"op\">,</span> fib1 <span class=\"op\">=</span> <span class=\"dv\">1</span><span class=\"op\">,</span> fib2 <span class=\"op\">=</span> <span class=\"dv\">1</span><span class=\"op\">,</span> i<span class=\"op\">;</span></span>\n<span id=\"cb2-3\"><a href=\"#cb2-3\" aria-hidden=\"true\" tabindex=\"-1\"></a>        <span class=\"cf\">for</span> <span class=\"op\">(</span>i <span class=\"op\">=</span> <span class=\"dv\">3</span><span class=\"op\">;</span> i <span class=\"op\">&lt;=</span> n<span class=\"op\">;</span> i<span class=\"op\">++)</span> <span class=\"op\">{</span></span>\n<span id=\"cb2-4\"><a href=\"#cb2-4\" aria-hidden=\"true\" tabindex=\"-1\"></a>            f <span class=\"op\">=</span> fib1 <span class=\"op\">+</span> fib2<span class=\"op\">;</span></span>\n<span id=\"cb2-5\"><a href=\"#cb2-5\" aria-hidden=\"true\" tabindex=\"-1\"></a>            fib2 <span class=\"op\">=</span> fib1<span class=\"op\">;</span></span>\n<span id=\"cb2-6\"><a href=\"#cb2-6\" aria-hidden=\"true\" tabindex=\"-1\"></a>            fib1 <span class=\"op\">=</span> f<span class=\"op\">;</span></span>\n<span id=\"cb2-7\"><a href=\"#cb2-7\" aria-hidden=\"true\" tabindex=\"-1\"></a>        <span class=\"op\">}</span></span>\n<span id=\"cb2-8\"><a href=\"#cb2-8\" aria-hidden=\"true\" tabindex=\"-1\"></a>        <span class=\"cf\">return</span> f<span class=\"op\">;</span></span>\n<span id=\"cb2-9\"><a href=\"#cb2-9\" aria-hidden=\"true\" tabindex=\"-1\"></a>    <span class=\"op\">}</span></span>\n<span id=\"cb2-10\"><a href=\"#cb2-10\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb2-11\"><a href=\"#cb2-11\" aria-hidden=\"true\" tabindex=\"-1\"></a>    <span class=\"dt\">int</span> main<span class=\"op\">(){</span></span>\n<span id=\"cb2-12\"><a href=\"#cb2-12\" aria-hidden=\"true\" tabindex=\"-1\"></a>        <span class=\"dt\">int</span> n<span class=\"op\">;</span></span>\n<span id=\"cb2-13\"><a href=\"#cb2-13\" aria-hidden=\"true\" tabindex=\"-1\"></a>        scanf<span class=\"op\">(</span><span class=\"st\">&quot;%d&quot;</span><span class=\"op\">,</span> <span class=\"op\">&amp;</span>n<span class=\"op\">);</span></span>\n<span id=\"cb2-14\"><a href=\"#cb2-14\" aria-hidden=\"true\" tabindex=\"-1\"></a>        printf<span class=\"op\">(</span><span class=\"st\">&quot;%d&quot;</span><span class=\"op\">,</span> fib<span class=\"op\">(</span>n<span class=\"op\">));</span></span>\n<span id=\"cb2-15\"><a href=\"#cb2-15\" aria-hidden=\"true\" tabindex=\"-1\"></a>    <span class=\"op\">}</span></span></code></pre></div>\n<h2 id=\"exemplos\">Exemplos</h2>\n<pre><code>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; 01\n1\n========\n1\n&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;\n\n&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; 02\n2\n========\n1\n&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;\n\n&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; 03\n3\n========\n2\n&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;\n\n&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; 04\n4\n========\n3\n&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</code></pre>\n</body>\n</html>\n",
    "upload": [
        {
            "name": "vpl_evaluate.cases",
            "contents": ">>>>>>>> 01\n1\n========\n1\n<<<<<<<<\n\n>>>>>>>> 02\n2\n========\n1\n<<<<<<<<\n\n>>>>>>>> 03\n3\n========\n2\n<<<<<<<<\n\n>>>>>>>> 04\n4\n========\n3\n<<<<<<<<\n\n>>>>>>>> 05\n5\n========\n5\n<<<<<<<<\n\n>>>>>>>> 06\n6\n========\n8\n<<<<<<<<\n\n>>>>>>>> 07\n7\n========\n13\n<<<<<<<<\n\n>>>>>>>> 08\n8\n========\n21\n<<<<<<<<\n\n>>>>>>>> 09\n9\n========\n34\n<<<<<<<<\n",
            "encoding": 0
        }
    ],
    "keep": [],
    "required": []
}
