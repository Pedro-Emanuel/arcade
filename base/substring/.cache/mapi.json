{
    "title": "L1 - @substring - Obter Substrings",
    "description": "<!DOCTYPE html>\n<html xmlns=\"http://www.w3.org/1999/xhtml\" lang=\"\" xml:lang=\"\">\n<head>\n  <meta charset=\"utf-8\" />\n  <meta name=\"generator\" content=\"pandoc\" />\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, user-scalable=yes\" />\n  <title>L1 - @substring - Obter Substrings</title>\n  <style>\n    code{white-space: pre-wrap;}\n    span.smallcaps{font-variant: small-caps;}\n    div.columns{display: flex; gap: min(4vw, 1.5em);}\n    div.column{flex: auto; overflow-x: auto;}\n    div.hanging-indent{margin-left: 1.5em; text-indent: -1.5em;}\n    /* The extra [class] is a hack that increases specificity enough to\n       override a similar rule in reveal.js */\n    ul.task-list[class]{list-style: none;}\n    ul.task-list li input[type=\"checkbox\"] {\n      font-size: inherit;\n      width: 0.8em;\n      margin: 0 0.8em 0.2em -1.6em;\n      vertical-align: middle;\n    }\n  </style>\n  <link rel=\"stylesheet\" href=\"/tmp/tmpgx7g5amf.css\" />\n  <!--[if lt IE 9]>\n    <script src=\"//cdnjs.cloudflare.com/ajax/libs/html5shiv/3.7.3/html5shiv-printshiv.min.js\"></script>\n  <![endif]-->\n</head>\n<body>\n<h1 id=\"l1---substring---obter-substrings\">L1 - <span class=\"citation\"\ndata-cites=\"substring\">@substring</span> - Obter Substrings</h1>\n<p>Veja a vers\u00e3o online: <a\nhref=\"https://github.com/qxcodefup/arcade/blob/master/base/substring/Readme.md\">aqui.</a></p>\n<figure>\n<img\nsrc=\"https://raw.githubusercontent.com/qxcodefup/arcade/master/base/substring/cover.jpg\"\nalt=\"_\" />\n<figcaption aria-hidden=\"true\">_</figcaption>\n</figure>\n<h2 id=\"a\u00e7\u00e3o\">A\u00e7\u00e3o</h2>\n<p>Fa\u00e7a uma fun\u00e7\u00e3o que retorna uma substring dada a String passada, o\n\u00cdNDICE da posi\u00e7\u00e3o inicial e o n\u00famero de caracteres a serem obtidos. Se\nos valores de inicio forem inv\u00e1lidos, retorne uma String vazia. Retorne\na quantidade de caracteres pedidos ou at\u00e9 terminar a palavra.</p>\n<h2 id=\"entrada\">Entrada</h2>\n<ul>\n<li>Um texto, no m\u00e1ximo 100 chars.</li>\n<li>O \u00edndice do primeiro caractere.</li>\n<li>Quantidade de caracteres.</li>\n</ul>\n<h2 id=\"sa\u00edda\">Sa\u00edda</h2>\n<ul>\n<li>A substring.</li>\n</ul>\n<h2 id=\"exemplos\">Exemplos</h2>\n<pre><code>\n&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; 01\nCoralina\n0\n4\n========\nCora\n&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;\n\n&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; 01\nCoralina\n1\n4\n========\noral\n&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;\n\n&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; 02\nPower Ranger\n4\n20\n========\nr Ranger\n&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;\n</code></pre>\n<h2 id=\"dicas\">Dicas</h2>\n<ul>\n<li><p>Se estiver em Python, fa\u00e7a usando um la\u00e7o para montar a\nsubstring.</p></li>\n<li><p>Crie uma vari\u00e1vel resposta como String vazia.</p></li>\n<li><p>Faca um la\u00e7o que percorra os caracteres que voc\u00ea precisa da\npalavra e adicione na String resposta.</p></li>\n</ul>\n</body>\n</html>\n",
    "upload": [
        {
            "name": "vpl_evaluate.cases",
            "contents": ">>>>>>>> 01\nCoralina\n0\n4\n========\nCora\n<<<<<<<<\n\n>>>>>>>> 01\nCoralina\n1\n4\n========\noral\n<<<<<<<<\n\n>>>>>>>> 02\nPower Ranger\n4\n20\n========\nr Ranger\n<<<<<<<<\n\n>>>>>>>> 03\nCoralina\n0\n1\n========\nC\n<<<<<<<<\n\n>>>>>>>> 04\nCoralina\n1\n1\n========\no\n<<<<<<<<\n\n>>>>>>>> 06\nPower Ranger\n4\n30\n========\nr Ranger\n<<<<<<<<\n\n>>>>>>>> 07\nDecoracao\n4\n5\n========\nracao\n<<<<<<<<\n",
            "encoding": 0
        }
    ],
    "keep": [],
    "required": []
}
