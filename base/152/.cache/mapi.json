{
    "title": "@152 L3 - Letras Ordenadas",
    "description": "<!DOCTYPE html>\n<html xmlns=\"http://www.w3.org/1999/xhtml\" lang=\"\" xml:lang=\"\">\n<head>\n  <meta charset=\"utf-8\" />\n  <meta name=\"generator\" content=\"pandoc\" />\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, user-scalable=yes\" />\n  <title>@152 L3 - Letras Ordenadas</title>\n  <style>\n    code{white-space: pre-wrap;}\n    span.smallcaps{font-variant: small-caps;}\n    span.underline{text-decoration: underline;}\n    div.column{display: inline-block; vertical-align: top; width: 50%;}\n    div.hanging-indent{margin-left: 1.5em; text-indent: -1.5em;}\n    ul.task-list{list-style: none;}\n  </style>\n  <link rel=\"stylesheet\" href=\"/tmp/tmplo1n3eep.css\" />\n  <!--[if lt IE 9]>\n    <script src=\"//cdnjs.cloudflare.com/ajax/libs/html5shiv/3.7.3/html5shiv-printshiv.min.js\"></script>\n  <![endif]-->\n</head>\n<body>\n<h2 id=\"l3---letras-ordenadas\"><span class=\"citation\"\ndata-cites=\"152\">@152</span> L3 - Letras Ordenadas</h2>\n<h3 id=\"obi-2015---fase-2---n\u00edvel-1\">OBI 2015 - Fase 2 - N\u00edvel 1</h3>\n<p><img\nsrc=\"https://raw.githubusercontent.com/qxcodefup/arcade/master/base/152/cover.jpg\" /></p>\n<h2 id=\"motiva\u00e7\u00e3o\">Motiva\u00e7\u00e3o</h2>\n<p>Uma <em>cadeia de caracteres</em> \u00e9 uma sequ\u00eancia de letras do\nalfabeto. Uma cadeia de caracteres <em>crescente</em> \u00e9 uma sequ\u00eancia de\nletras onde a pr\u00f3xima letra (da esquerda para a direita) nunca ocorre\nantes no alfabeto do que a letra anterior. Por exemplo ABBD \u00e9 crescente,\nenquanto ABBAD n\u00e3o \u00e9 crescente.</p>\n<p>Uma <em>subsequ\u00eancia</em> de uma cadeia de caracteres \u00e9 uma cadeia de\ncaracteres que pode ser obtida a partir da remo\u00e7\u00e3o de zero ou mais\ncaracteres da cadeia de caracteres original. Por exemplo ANNA \u00e9 uma\nsubsequ\u00eancia de BANANAS. Outro exemplo seria ANNS, que tamb\u00e9m \u00e9 uma\nsubsequ\u00eancia crescente de BANANAS.</p>\n<p>Dada uma cadeia de caracteres S, escreva um programa para determinar\no tamanho da maior subsequ\u00eancia de S que \u00e9 uma cadeia de caracteres\ncrescente.</p>\n<h3 id=\"entrada\">Entrada</h3>\n<p>A entrada consiste em uma \u00fanica linha, contendo uma cadeia de\ncaracteres S.</p>\n<h3 id=\"sa\u00edda\">Sa\u00edda</h3>\n<p>Seu programa deve produzir uma \u00fanica linha, contendo um \u00fanico\ninteiro, o tamanho da maior subsequ\u00eancia de S que \u00e9 uma cadeia de\ncaracteres crescente.</p>\n<h2 id=\"restri\u00e7\u00f5es\">Restri\u00e7\u00f5es</h2>\n<ul>\n<li>A cadeia de caracteres de entrada cont\u00e9m letras mai\u00fasculas do\nalfabeto, de A at\u00e9 Z.</li>\n<li>1 \u2264 comprimento(S) \u2264 3 x 105.</li>\n</ul>\n<h2 id=\"informa\u00e7\u00f5es-sobre-a-pontua\u00e7\u00e3o\">Informa\u00e7\u00f5es sobre a\npontua\u00e7\u00e3o</h2>\n<ul>\n<li>Em um conjunto de casos de teste valendo 20 pontos: comprimento(S) \u2264\n20.</li>\n<li>Em um conjunto de casos de teste valendo 30 pontos: comprimento(S) \u2264\n3000.</li>\n</ul>\n<h2 id=\"exemplos\">Exemplos</h2>\n<pre><code>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;\nBANANAS\n========\n4\n&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;\n\n&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;\nAAXBBXZZX\n========\n7\n&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;\n\n&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;\nAAA\n========\n3\n&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</code></pre>\n</body>\n</html>\n",
    "upload": [
        {
            "name": "vpl_evaluate.cases",
            "contents": ">>>>>>>>\nBANANAS\n========\n4\n<<<<<<<<\n\n>>>>>>>>\nAAXBBXZZX\n========\n7\n<<<<<<<<\n\n>>>>>>>>\nAAA\n========\n3\n<<<<<<<<\n\n>>>>>>>> 04\nLDAPJFUCKKNCJFDRYKOO\n========\n7\n<<<<<<<<\n\n>>>>>>>> 05\nAZZZZAAAAZAZZAZZZAZA\n========\n12\n<<<<<<<<\n\n>>>>>>>> 06\nZAZZZZZZZZZZAZZZAZZZ\n========\n17\n<<<<<<<<\n\n>>>>>>>> 07\nZAAAZZZAAAAZAAZAZZAA\n========\n12\n<<<<<<<<\n\n>>>>>>>> 08\nVSNNPBZDIIJEDJYOSHSH\n========\n9\n<<<<<<<<\n\n>>>>>>>> 09\nOMDURMSZYZEYTWQZRPVQ\n========\n6\n<<<<<<<<\n\n>>>>>>>> 10\nPIRCHIRKSEUOKCBBOCMC\n========\n6\n<<<<<<<<\n\n>>>>>>>> 11\nVHOGWMFNOBTJRXSRMVVK\n========\n8\n<<<<<<<<\n\n>>>>>>>> 12\nASYHGLIRVWSFYDBAAPJY\n========\n8\n<<<<<<<<\n\n>>>>>>>> 13\nTPNETFUVCKKLJMDMKKZC\n========\n8\n<<<<<<<<\n\n>>>>>>>> 14\nNPONLLXMRFOUPTRAXZTZ\n========\n9\n<<<<<<<<\n\n>>>>>>>> 15\nABCDEFGHIJKLMNOPQRST\n========\n20\n<<<<<<<<\n\n>>>>>>>> 16\nAZZZAAZZAAAZAZAZAZAZ\n========\n11\n<<<<<<<<\n",
            "encoding": 0
        }
    ],
    "keep": [],
    "required": []
}
